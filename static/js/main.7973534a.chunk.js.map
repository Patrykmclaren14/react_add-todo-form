{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","todoUser","TodoList","todos","map","App","useState","todoTitle","setTodoTitle","setTodoUser","todosFromServer","setTodos","userError","setUserError","titleError","setTitleError","htmlFor","type","placeholder","value","onChange","event","target","required","disabled","onClick","e","preventDefault","newId","reduce","acc","curr","length","userObject","newTodo","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7973534a.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { UserProps } from './UserInfo.types';\n\nexport const UserInfo: React.FC<UserProps> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import { UserInfo } from '../UserInfo';\nimport usersFromServer from '../../api/users';\nimport { TodoInfoProps } from './TodoInfo.types';\n\nexport const TodoInfo: React.FC<TodoInfoProps> = ({ todo }) => {\n  const user\n  = usersFromServer.find((todoUser) => todoUser.id === todo.userId);\n\n  return (\n    <article data-id={todo.id} className={`TodoInfo ${todo.completed ? 'TodoInfo--completed' : ''}`}>\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      <UserInfo user={user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { TodoListProps, Todo } from './TodoList.types';\n\nexport const TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState, ChangeEvent, FormEvent } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [todoTitle, setTodoTitle] = useState<string>('');\n  const [todoUser, setTodoUser] = useState<string>('0');\n  const [todos, setTodos] = useState(todosFromServer);\n  const [userError, setUserError] = useState<boolean>(false);\n  const [titleError, setTitleError] = useState<boolean>(false);\n\n  const title = (event: ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const person = (event: ChangeEvent<HTMLSelectElement>) => {\n    setTodoUser(event.target.value);\n    setUserError(false);\n  };\n\n  const createTodo = (e: FormEvent) => {\n    e.preventDefault();\n    const newId\n      = todos.reduce(\n        (acc, curr) => (curr.id > acc.id ? curr : acc), todos[0],\n      ).id + 1;\n\n    if (todoUser === '0') {\n      setUserError(true);\n    }\n\n    if (todoTitle.length === 0) {\n      setTitleError(true);\n    }\n\n    const userObject = usersFromServer.find((user) => user.name === todoUser);\n\n    if (!userObject) {\n      return;\n    }\n\n    const newTodo = {\n      id: newId,\n      title: todoTitle,\n      completed: false,\n      userId: userObject.id,\n    };\n\n    if (todoTitle.length && todoUser) {\n      setTodos((prevTodos) => [...prevTodos, newTodo]);\n      setTodoTitle('');\n      setTodoUser('0');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form>\n        <div className=\"field\">\n          <label htmlFor=\"title\">Title: </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={title}\n            required\n          />\n          {titleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"title\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            value={todoUser}\n            onChange={person}\n            required\n          >\n            <option value=\"0\" disabled>\n              Choose a user\n            </option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {userError && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\" onClick={createTodo}>\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}